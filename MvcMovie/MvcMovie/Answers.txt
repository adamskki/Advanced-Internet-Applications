1. What are the responsibilities of each layer of the MVC architecture and how are they
connected?
Answer:
Models - Classes that represent the data of the app. It directly manages the data, logic and rules of the application.
Views - Views are the components that display the app's user interface (UI). Generally, this UI displays the model data.
Controller -  The controller responds to the user input and performs interactions on the data model objects. The controller receives the input, optionally validates it and then passes the input to the model.

2. What are the naming conventions for models, controllers, controller actions, views folders
and views themselves?
Answer:
- All file names beginning with upercase
Models:
	- name of the class, for example Movie.cs
Controllers:
	- controllers have "Controller" suffix in their file name for example: MovieController
Views folder
	- HelloWorld, Movies etc
View files:
	- Create.cshtml, Update.cshtml
Name of functon in controller is the name of file in views folder of the template we are returning (public async Task<IActionResult> Edit(int? id))

3. How to pass data from controllers to views (2 options)?
Answer:
- Argument in View call - return View(movie);
- using ViewData -  ViewData["Title"] = "Movie List";

4. How to map urlâ€™s to controller actions?
Using Startup.cs file:
Example:
	endpoints.MapControllerRoute(
                    name: "default",
                    pattern: "{controller=Home}/{action=Index}/{id?}");

5. How to restrict controller actions to be executed only via certain HTTP request types (e.g.,
only via POST)?
Answer:
in MovieController, above the name of function:

        [HttpPost]  <------------
        public string Index(string searchString, bool notUsed)
        {
            return "From [HttpPost]Index: filter on " + searchString;
        }

6. How to make sure a controller action can only be called through a form on our website and
not through some external request?
Answer:
[ValidateAntiForgeryToken] above method in Controller

7. Where do you define data validation and how do you ensure it in views and controllers?
In Models - above class attributes
Example:
	[RegularExpression(@"^[A-Z]+[a-zA-Z""'\s-]*$")]
        [Required]
        [StringLength(30)]
Then there is a call: ModelState.IsValid which check whether the movie has any validation errors. Calling this method evaluates any validation attributes that have been applied to the object.